<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mapper.SbillitOrderMapper">
 	<resultMap id="order" type="SbillitOrder">
      <id property="id" column="id"/>
      <result property="userId" column="user_id"/>
      <result property="userName" column="user_name"/>
      <result property="type" column="type"/>
      <result property="title" column="title"/>
      <result property="amount" column="amount"/>
      <result property="status" column="status"/>
      <result property="description" column="description"/>
      <result property="storePhone" column="store_phone"/>
      <result property="picture1" column="picture_1"/>
      <result property="picture2" column="picture_2"/>
      <result property="picture3" column="picture_3"/>
      <result property="expiredAt" column="expired_at"/>
      <result property="createdAt" column="created_at"/>
      <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <resultMap id="orderShare" type="SbillitOrderShare">
      <result property="orderId" column="order_id"/>
      <result property="phone" column="phone"/>
      <result property="userId" column="user_id"/>
      <result property="userName" column="user_name"/>
      <result property="status" column="status" />
      <result property="createdAt" column="created_at"/>
      <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <resultMap id="orderItem" type="SbillitOrderItem">
      <result property="orderId" column="order_id"/>
      <result property="userId" column="user_id"/>
      <result property="userName" column="user_name"/>
      <result property="itemNum" column="item_num"/>
      <result property="itemPrice" column="item_price" />
      <result property="itemName" column="item_name" />
      <result property="createdAt" column="created_at"/>
      <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <resultMap id="orderThumbup" type="SbillitOrderThumbup">
      <result property="orderId" column="order_id"/>
      <result property="userId" column="user_id"/>
      <result property="userName" column="user_name"/>
      <result property="createdAt" column="created_at"/>
      <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <resultMap id="orderComment" type="SbillitOrderComment">
 		<id property="id" column="id"/>
 		<result property="orderId" column="order_id"/>
      	<result property="userId" column="user_id"/>
      	<result property="userName" column="user_name"/>
      	<result property="message" column="message"/>
      	<result property="status" column="status"/>
      	<result property="atUserId" column="at_user_id"/>
      	<result property="createdAt" column="created_at"/>
    </resultMap>

    <select id="findAllOrders" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE 1=1
    </select>
    
    <select id="findOrderbyId" parameterType="int" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.id=#{value}
    </select>
    
    <select id="findValidOrderbyId" parameterType="int" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.id=#{value} AND o.status IN (0, 1, 2, 3, 6)
    </select>
    
    <select id="findExpiredOrderbyId" parameterType="int" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.id=#{value} AND o.status = 4
    </select>
    
    <select id="findFailedOrderbyId" parameterType="int" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.id=#{value} AND o.status = 5
    </select>
    
    <select id="findClosedOrderbyId" parameterType="int" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.id=#{value} AND o.status = 7
    </select>
    
    <select id="findOpenOrder" resultMap="order">
        SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.status != 7
    </select>
    
    <select id="findOrderInIds" parameterType="java.util.HashMap" resultMap="order">
    	<!-- SELECT * FROM sbillit_order WHERE id in -->
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.id IN 
    	<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
    
    <select id="findOrderHistoryByUserId" parameterType="long" resultMap="order">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
    	WHERE o.user_id=#{value} 
    	ORDER BY o.created_at DESC;
	</select>
	
  	<insert id="insertOrder" parameterType="SbillitOrder">
		INSERT INTO sbillit_order 
			(id, user_id, type, title, amount, status, description, store_phone, 
			picture_1, picture_2, picture_3, expired_at, created_at, updated_at)
		VALUES 
			(#{id}, #{userId}, #{type},  #{title}, #{amount},#{status}, #{description}, #{storePhone}, 
			#{picture1}, #{picture2}, #{picture3}, #{expiredAt}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP())
    <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
	   SELECT id FROM seq_order
	</selectKey>
	</insert>  

    <update id="updateSeq">
    	UPDATE seq_order SET id=id+1;
    </update>	
    
    <insert id="insertOrderShare" parameterType="SbillitOrderShare">
    	INSERT INTO sbillit_order_share (order_id, phone, user_id, status, created_at, updated_at)
    	VALUES (#{orderId}, #{phone}, #{userId}, #{status}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP())
    </insert>
    
    <update id="closeExpiredOrder" parameterType="java.util.HashMap">
    	UPDATE sbillit_order set status = 7
    	WHERE id IN
    	<foreach item="item" index="index" collection="orderIds" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </update>
    
    <update id="updateOrder" parameterType="java.util.HashMap">
    UPDATE sbillit_order 
    <set>
        <if test="status != null">
    		status = #{status}, 
    	</if>
    	<if test="amount != null">
    		amount = #{amount}, 
    	</if>
    	<if test="picture1 != null">
    		picture_1 = #{picture1}, 
    	</if>
    	<if test="picture2 != null">
    		picture_2 = #{picture2}, 
    	</if>
    	<if test="picture3 != null">
    		picture_3 = #{picture3}, 
    	</if>
    	updated_at = UNIX_TIMESTAMP()
    </set>
    WHERE id = #{orderId} 
   	<if test="userId != null">
   		AND user_id = #{userId} 
   	</if>
    </update>
    
    <update id="updateOrderShare" parameterType="java.util.HashMap">
    	UPDATE sbillit_order_share 
    	<set>
    	<if test="status != null">
    		status = #{status}, 
    	</if>
    	updated_at = UNIX_TIMESTAMP()
    	</set>
    	WHERE order_id = #{orderId} AND phone = #{phone}	
    </update>
    
    <select id="findOrderItemByOrderId" parameterType="int" resultMap="orderItem">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_item AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.order_id = #{orderId} AND o.item_num > 0 
        ORDER BY o.updated_at DESC
    </select>

    <insert id="insertOrderItem" parameterType="SbillitOrderItem"> 
    	INSERT INTO sbillit_order_item (order_id, user_id, item_num, item_price, item_name, created_at, updated_at)
    	VALUES (#{orderId}, #{userId}, #{itemNum}, #{itemPrice}, #{itemName}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP())
    </insert>
    
    <update id="updateOrderItem" parameterType="java.util.HashMap">
    	UPDATE sbillit_order_item 
    	<set>
    		<if test="itemPrice != null">
    			item_price = #{itemPrice},
    		</if>
    		<if test="itemNum != null">
    			item_num = #{itemNum},
    		</if>
    		updated_at = UNIX_TIMESTAMP()
    	</set>
    	WHERE order_id = #{orderId} AND user_id = #{userId} AND item_name = #{itemName}
    </update>
    
    <select id="findOrderThumbupByUserId" parameterType="int" resultMap="orderThumbup">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_thumbup AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id 
        WHERE o.user_id = #{id} ORDER BY o.updated_at DESC
    </select>

    <insert id="insertOrderThumbup" parameterType="SbillitOrderThumbup"> 
    	INSERT INTO sbillit_order_thumbup(order_id, user_id, title, created_at, updated_at)
    	VALUES (#{orderId}, #{userId}, #{title}, UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
    </insert>
    
    <insert id="insertOrderComment" parameterType="SbillitOrderComment"> 
    	INSERT INTO sbillit_order_comment(id, order_id, user_id, message, status, at_user_id, created_at)
    	VALUES (#{id}, #{orderId}, #{userId}, #{message}, #{status}, #{atUserId}, UNIX_TIMESTAMP());
    <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
	   SELECT id FROM seq_order_comment
	</selectKey>
    </insert>
    
    <update id="updateCommentSeq">
    	UPDATE seq_order_comment SET id=id+1;
    </update>	
    
    <select id="findOrderShareByUserIdAndOrderId" parameterType="java.util.HashMap" resultMap="orderShare">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_share AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id
    	WHERE 1=1 
    	<if test="userId != null">
   			AND o.user_id = #{userId} 
   		</if>
    	<if test="orderId != null">
    		AND o.order_id = #{orderId}
    	</if> 
    	ORDER BY o.updated_at DESC
    </select>
    
    <select id="findOrderShareExcludeByOrderId" parameterType="java.util.HashMap" resultMap="orderShare">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_share AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id
    	WHERE 1=1 
    	<if test="userId != null">
   			AND o.user_id = #{userId} 
   		</if>
   		AND o.order_id NOT IN
    	<foreach item="item" index="index" collection="orderIds" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    	ORDER BY o.updated_at DESC
    </select>
    
    <select id="findOrderItemByUserIdAndOrderId" parameterType="java.util.HashMap" resultMap="orderItem">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_item AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id
    	WHERE o.order_id = #{orderId} 
    	<if test="userId != null">
   		AND o.user_id = #{userId} 
   		</if>
    	ORDER BY o.updated_at DESC
    </select>
    
    <select id="findOrderItemByOrderIds" parameterType="java.util.HashMap" resultMap="orderItem">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_item AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id
    	WHERE o.item_num > 0 AND o.user_id = #{userId} AND o.order_id IN
      	<foreach item="item" index="index" collection="orderIds" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    	ORDER BY o.updated_at DESC
    </select>
    
    <select id="findOrderItemByUserIdAndOrderIdAndItem" parameterType="java.util.HashMap" resultMap="orderItem">
    	SELECT * 
        FROM sbillit_order_item
    	WHERE user_id = #{userId} AND order_id = #{orderId} AND item_name= #{itemName} 
    	ORDER BY updated_at DESC
    </select>
    
     <select id="findOrderThumbupByUserIdAndOrderId" parameterType="java.util.HashMap" resultMap="orderThumbup">
     	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_thumbup AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id
    	WHERE o.order_id = #{orderId} 
    	<if test="userId != null">
   		AND o.user_id = #{userId} 
   		</if>
   		ORDER BY o.updated_at DESC
    </select>
    
    <select id="findOrderCommentByUserIdAndOrderId" parameterType="java.util.HashMap" resultMap="orderComment">
    	SELECT o.*, u.nickname AS user_name 
        FROM sbillit_order_comment AS o LEFT JOIN sbillit_user AS u ON o.user_id = u.id
    	WHERE o.order_id = #{orderId} 
    	<if test="userId != null">
   		AND o.user_id = #{userId} 
   		</if>
    	ORDER BY o.created_at DESC
    </select>
	
</mapper>